{"version":3,"sources":["Components/feedback/Buttons.js","Components/feedback/Notification.js","Components/feedback/Spans.js","Components/feedback/Feedbake.js","App.js","reportWebVitals.js","index.js","Components/feedback/Buttonst.module.css"],"names":["Buttons","buttonGood","buttonneutral","buttonBad","className","styles","feedbackButtons","type","onClick","Notification","Spans","good","neutral","bad","totalFeedbak","positiveFeedback","Feedbake","state","setState","e","goodProcen","title","this","message","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2SAkBeA,EAhBC,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5C,OACE,sBAAKC,UAAWC,IAAOC,gBAAvB,UACE,wBAAQC,KAAK,SAASC,QAASP,EAA/B,kBAGA,wBAAQM,KAAK,SAASC,QAASN,EAA/B,qBAGA,wBAAQK,KAAK,SAASC,QAASL,EAA/B,qBCRSM,EADM,kBAAM,oDCYZC,G,MAZD,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,iBACjD,OACE,qCACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,OACZ,sDAAyBC,IAAzB,YCqDSC,E,4MAxDbC,MAAQ,CAAEN,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCZ,WAAa,WACX,EAAKiB,UAAS,SAAAC,GACZ,MAAO,CACLR,KAAMQ,EAAER,KAAO,O,EAIrBR,UAAY,WACV,EAAKe,UAAS,SAAAC,GACZ,MAAO,CACLN,IAAKM,EAAEN,IAAM,O,EAInBX,cAAgB,WACd,EAAKgB,UAAS,SAAAC,GACZ,MAAO,CACLP,QAASO,EAAEP,QAAU,O,EAI3BE,aAAe,WACb,OAAO,EAAKG,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAE3DO,WAAa,WACX,OAAyB,IAAlB,EAAKH,MAAMN,M,EAEpBI,iBAAmB,WACjB,OAAO,EAAKK,aAAe,EAAKN,gB,4CAGlC,WACE,OACE,gCACE,yBAASO,MAAM,0BACf,gCACE,cAAC,EAAD,CAASpB,WAAYqB,KAAKrB,WAAYC,cAAeoB,KAAKpB,cAAeC,UAAWmB,KAAKnB,YACxFmB,KAAKR,eACJ,cAAC,EAAD,CACEH,KAAMW,KAAKL,MAAMN,KACjBC,QAASU,KAAKL,MAAML,QACpBC,IAAKS,KAAKL,MAAMJ,IAChBE,iBAAkBO,KAAKP,iBACvBD,aAAcQ,KAAKR,eAGrB,cAAC,EAAD,CAAcS,QAAQ,gC,GAjDXC,aCKRC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,gBAAkB,qC","file":"static/js/main.e4a5d85c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Buttonst.module.css\";\r\nconst Buttons = ({ buttonGood, buttonneutral, buttonBad }) => {\r\n  return (\r\n    <div className={styles.feedbackButtons}>\r\n      <button type=\"button\" onClick={buttonGood}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={buttonneutral}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={buttonBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst Notification = () => <h2>No feedback given</h2>;\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport styles from \"./Spans.module.css\";\r\nconst Spans = ({ good, neutral, bad, totalFeedbak, positiveFeedback }) => {\r\n  return (\r\n    <>\r\n      <span>Good{good}</span>\r\n      <span>Neutral{neutral}</span>\r\n      <span>Bad{bad}</span>\r\n      <span>Total{totalFeedbak()}</span>\r\n      <span>Positive feedback:{positiveFeedback()}%</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spans;\r\n","import React, { Component } from \"react\";\r\nimport Buttons from \"./Buttons\";\r\nimport Notification from \"./Notification\";\r\nimport Spans from \"./Spans\";\r\n\r\nclass Feedbake extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n  // onClick={countGoodFeedback()}\r\n  buttonGood = () => {\r\n    this.setState(e => {\r\n      return {\r\n        good: e.good + 1\r\n      };\r\n    });\r\n  };\r\n  buttonBad = () => {\r\n    this.setState(e => {\r\n      return {\r\n        bad: e.bad + 1\r\n      };\r\n    });\r\n  };\r\n  buttonneutral = () => {\r\n    this.setState(e => {\r\n      return {\r\n        neutral: e.neutral + 1\r\n      };\r\n    });\r\n  };\r\n  totalFeedbak = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  goodProcen = () => {\r\n    return this.state.good * 100;\r\n  };\r\n  positiveFeedback = () => {\r\n    return this.goodProcen() / this.totalFeedbak();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section title=\"Please leave feedback\" />\r\n        <div>\r\n          <Buttons buttonGood={this.buttonGood} buttonneutral={this.buttonneutral} buttonBad={this.buttonBad} />\r\n          {this.totalFeedbak() ? (\r\n            <Spans\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              positiveFeedback={this.positiveFeedback}\r\n              totalFeedbak={this.totalFeedbak}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedbake;\r\n","import Feedbake from \"./Components/feedback/Feedbake\";\n\nfunction App() {\n  return (\n    <>\n      <Feedbake />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButtons\":\"Buttonst_feedbackButtons__2NnAQ\"};"],"sourceRoot":""}