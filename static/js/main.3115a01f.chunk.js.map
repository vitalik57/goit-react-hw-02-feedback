{"version":3,"sources":["section/Section.js","Components/feedback/Buttons.js","Components/feedback/Notification.js","Components/feedback/Spans.js","Components/feedback/Feedbacke.js","App.js","reportWebVitals.js","index.js","Components/feedback/Buttonst.module.css"],"names":["Section","title","children","prototype","PropTypes","string","isRequired","Buttons","buttonGood","buttonneutral","buttonBad","className","styles","feedbackButtons","type","onClick","Notification","message","Spans","good","neutral","bad","totalFeedbak","positiveFeedback","number","func","Feedbacke","state","setState","e","goodProcen","toFixed","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3115a01f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    {title}\r\n    {children}\r\n  </section>\r\n);\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from \"./Buttonst.module.css\";\r\nconst Buttons = ({ buttonGood, buttonneutral, buttonBad }) => {\r\n  return (\r\n    <div className={styles.feedbackButtons}>\r\n      <button type=\"button\" onClick={buttonGood}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={buttonneutral}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={buttonBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <h2>{message}</h2>;\r\nNotification.prototype = {\r\n  message: PropTypes.string.isRequired\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport styles from \"./Spans.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Spans = ({ good, neutral, bad, totalFeedbak, positiveFeedback }) => {\r\n  return (\r\n    <>\r\n      <span>Good{good}</span>\r\n      <span>Neutral{neutral}</span>\r\n      <span>Bad{bad}</span>\r\n      <span>Total{totalFeedbak()}</span>\r\n      <span>Positive feedback:{positiveFeedback()}%</span>\r\n    </>\r\n  );\r\n};\r\nSpans.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  totalFeedbak: PropTypes.func.isRequired,\r\n  positiveFeedback: PropTypes.func.isRequired\r\n};\r\nexport default Spans;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"../../section/Section\";\r\nimport Buttons from \"./Buttons\";\r\nimport Notification from \"./Notification\";\r\nimport Spans from \"./Spans\";\r\n\r\nclass Feedbacke extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n  // onClick={countGoodFeedback()}\r\n  buttonGood = () => {\r\n    this.setState(e => {\r\n      return {\r\n        good: e.good + 1\r\n      };\r\n    });\r\n  };\r\n  buttonBad = () => {\r\n    this.setState(e => {\r\n      return {\r\n        bad: e.bad + 1\r\n      };\r\n    });\r\n  };\r\n  buttonneutral = () => {\r\n    this.setState(e => {\r\n      return {\r\n        neutral: e.neutral + 1\r\n      };\r\n    });\r\n  };\r\n  totalFeedbak = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  goodProcen = () => {\r\n    return this.state.good * 100;\r\n  };\r\n  positiveFeedback = () => {\r\n    return (this.goodProcen() / this.totalFeedbak()).toFixed(2);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          {\" \"}\r\n          <Buttons buttonGood={this.buttonGood} buttonneutral={this.buttonneutral} buttonBad={this.buttonBad} />\r\n        </Section>\r\n\r\n        <div>\r\n          {this.totalFeedbak() ? (\r\n            <Section title=\"Statistics\">\r\n              <Spans\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                positiveFeedback={this.positiveFeedback}\r\n                totalFeedbak={this.totalFeedbak}\r\n              />\r\n            </Section>\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedbacke;\r\n","import Feedbacke from \"./Components/feedback/Feedbacke\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Feedbacke />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButtons\":\"Buttonst_feedbackButtons__1c1TI\"};"],"sourceRoot":""}